<!DOCTYPE html>
<html lang="en">
  <head> 
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" crossorigin="anonymous">

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" crossorigin="anonymous">

    <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/k6-reporter/main/assets/icon.png" type="image/png">

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>K6 Load Test: <%= title %></title>
    <style>
      body {
        margin: 1rem;
        font-size: 0.8rem;
      }
      footer { 
        float: right;
        font-size: 0.8rem;
        color: #777;
      }
      footer a {
        text-decoration: none;
        color: #777;
      }
      .failed {
        background-color: #ff6666 !important;
      }     
      .good {
        background-color: #3abe3a !important;
      }   
      td.failed {
        font-weight: bold;
      }
      h2 {
        padding-bottom: 4px;
        border-bottom: solid 3px #cccccc;
      }
      .tabs {
        display: flex;
        flex-wrap: wrap; 
      }
      .tabs label {
        order: 1; 
        display: block;
        padding: 1rem 2rem;
        margin-right: 0.2rem;
        cursor: pointer;
        color: #666;
        background: #ddd;
        font-weight: bold;
        font-size: 1rem;
        flex: 1 1;
        transition: background ease 0.2s;
        border-top-left-radius: 0.3rem;
        border-top-right-radius: 0.3rem;
        border-color: #ccc;
        border-style: solid;
        border-width: 2px 2px 0px;
        box-shadow: inset 0px -3px 7px -1px rgba(0,0,0,0.33);
      }
      .tabs .tab {
        order: 99;
        flex-grow: 1;
        width: 100%;
        display: none;
        padding: 1rem;
        background: #fff;
      }
      .tabs input[type="radio"] {
        display: none;
      }
      .tabs input[type="radio"]:checked + label {
        background: #fff;
        box-shadow: none;
        color: #000;
      }
      .tabs input[type="radio"]:checked + label + .tab {
        display: block;
      }
      .box {
        flex: 1 1;
        border-radius: 0.3rem;
        background-color: #3abe3a;
        margin: 0.3rem;
        padding: 0.5rem;
        font-size: 2vw; 
        box-shadow: 0px 4px 7px -1px rgba(0,0,0,0.49);
        color: white;
        position: relative;
        overflow: hidden;
      }
      .box h4 {
        margin: 0;
        padding-bottom: 0.5rem;
        text-align: center;
        position: relative;
        z-index: 50;
        font-size: 1.4rem;
      }
      .row {
        display: flex;
      }
      .row div {
        flex: 1 1;
        text-align: center;
        font-size: 2rem;
      }
      .bignum {
        position: relative;
        font-size: min(6vw, 80px);
        z-index: 20;
      }
      table {
        font-size: min(2vw, 22px);
        width: 100%;
      }
      .icon { 
        position: absolute;
        top: 50%;
        left: 10%;
        transform: translate(-50%, -50%);
        color: #0000002d;
        font-size: 3vw;
        z-index: 1;
      }
      .metricbox {
        background-color: #5697e2;
        font-size: 3vw;
        height: auto;
      }
      .metricbox .row {
        position: relative;
        z-index: 20;
      }
      .pure-table td {
        font-size: 0.8rem;
      }
    </style>
  </head>

  <body>
    <div style="float:right">
      <% if(data.state && data.state.testRunDurationMs) {
        var diff = data.state.testRunDurationMs;
        var days = Math.floor(diff / (1000 * 60 * 60 * 24));
        diff -=  days * (1000 * 60 * 60 * 24);
        var hours = Math.floor(diff / (1000 * 60 * 60));
        diff -= hours * (1000 * 60 * 60);
        var mins = Math.floor(diff / (1000 * 60));
        diff -= mins * (1000 * 60);
        var seconds = Math.floor(diff / (1000));
        diff -= seconds * (1000);
        var result = { days: days, hours: hours, mins: mins, seconds: seconds };        
      %>
      <h1><%= result.days %>d <%= result.hours %>h <%= result.mins %>m <%= result.seconds %>s</h1>
      <% } %>
    </div>
    <h1>
      <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none" class="footer-module--logo--_lkxx"><path d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z" fill="#7D64FF"></path><path d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z" fill="#7D64FF"></path></svg> 
      &nbsp; K6 Load Test: <%= title %>
    </h1>
    
    <div class="row">
      <% if(data.setup_data && data.setup_data.config && data.setup_data.config.ezdrp && data.setup_data.config.ezdrp.URL_EZDRP) { %>
        <p style="font-size:1.3rem"><%= data.setup_data.config.ezdrp.URL_EZDRP %></p>        
      <% } %>
      <% if(data.setup_data && data.setup_data.config && data.setup_data.config.ezdrp && data.setup_data.config.ezdrp.VERSION) { %>
        <p style="font-size:1.3rem;padding-left: 40px"><%= data.setup_data.config.ezdrp.VERSION %></p>        
      <% } %>
    </div>

    <div class="row">
      <div class="box">
        <i class="fas fa-globe icon"></i>
        <h4>Total Requests</h4>
        <div class="bignum"><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div>
        <div class="bignum"><% if(data.metrics.grpc_reqs) { %><%= data.metrics.grpc_reqs.values.count %><% } %></div>
      </div>
      <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>
        <div class="box <% if(data.metrics.http_req_failed.values.passes > 0) { %> failed <% } %>">
          <i class="far fa-times-circle icon"></i>
          <h4>Failed Requests</h4>
          <div class="bignum"><%= data.metrics.http_req_failed.values.passes %></div>
          <div class="bignum"><span style="font-size: 0.9rem"><%= (data.metrics.http_req_failed.values.passes*100/data.metrics.http_reqs.values.count).toFixed(2) %>%</span></div>
        </div> 
      <% } %>
      <div class="box metricbox">
        <h4>Requests</h4>
        <i class="fas fa-globe icon"></i>
        <div class="row"><div>Total</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div></div>
        <div class="row"><div>Rate</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div></div>
      </div>

      <div class="box metricbox">
        <h4>Data Received</h4>
        <i class="fas fa-cloud-download-alt icon"></i>
        <div class="row"><div>Total</div><div><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div></div>
        <div class="row"><div>Rate</div><div><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div></div>
      </div>

      <div class="box metricbox">
        <h4>Data Sent</h4>
        <i class="fas fa-cloud-upload-alt icon"></i>
        <div class="row"><div>Total</div><div><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div></div>
        <div class="row"><div>Rate</div><div><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div></div>
      </div>   
    </div>
    </div>

    <div class="row">     
      <div class="box <% if(thresholdFailures > 0) { %> failed <% } %>">
        <i class="fas fa-chart-bar icon"></i>
        <h4>Failed Thresholds</h4>
        <div class="bignum"><%= thresholdFailures %></div>
      </div>
      <div class="box <% if(checkFailures > 0) { %> failed <% } %>">
        <i class="fas fa-eye icon"></i>
        <h4>Failed Checks</h4>
        <div class="bignum"><%= checkFailures %></div>
      </div>
      <% if (data.metrics.checks) { %>
        <div class="box metricbox">
          <h4>Checks</h4>
          <i class="fas fa-eye icon"></i>
          <div class="row"><div>Passed</div><div><%= data.metrics.checks.values.passes %></div></div>
          <div class="row"><div>Failed</div><div><%= data.metrics.checks.values.fails %></div></div>
        </div>
      <% } %>

      <div class="box metricbox">
        <h4>Iterations</h4>
        <i class="fas fa-redo icon"></i>
        <div class="row"><div>Total</div><div><%= data.metrics.iterations.values.count %></div></div>
        <div class="row"><div>Rate</div><div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div></div>
      </div>

      <div class="box metricbox">
        <h4>Virtual Users</h4>
        <i class="fas fa-user icon"></i>
        <div class="row"><div>Min</div><div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div></div>
        <div class="row"><div>Max</div><div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div></div>
      </div>
    </div>
    
    <br>
    
    <div class="tabs">
      <input type="radio" name="tabs" id="tabone" checked="checked">
      <label for="tabone"><i class="far fa-clock"></i> &nbsp; Request Metrics</label>
      <div class="tab">
        <table class="pure-table pure-table-striped">
          <tbody>
            <thead>
              <tr>
                <th></th>
                <th>Avg</th>
                <th>Max</th>
                <th>Med</th> 
                <th>Min</th>
                <th>90%</th>
                <th>95%</th>
                <th>99%</th>
                <th>99.99%</th>
              </tr>
            </thead>
            
            <% function checkFailed(metric, valName) {
                if(!metric.thresholds) return ''
                for(thres in metric.thresholds) {
                  if(thres.includes(valName)) {
                    if(!metric.thresholds[thres].ok) return 'failed'
                    return 'good'
                  }
                }
              }

              for(metricName of standardMetrics) { 
                if(!data.metrics[metricName]) { continue }
                var metric = data.metrics[metricName] 
            %>
              <tr>
                <td><b><%= metricName %></b></td>
                
                <% if(metric.values.avg) { %>
                  <td class="<%= checkFailed(metric, 'avg') %>"><%= metric.values.avg.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.max) { %>
                  <td class="<%= checkFailed(metric, 'max') %>"><%= metric.values.max.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  

                <% if(metric.values.med) { %>
                  <td class="<%= checkFailed(metric, 'med') %>"><%= metric.values.med.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  
                
                <% if(metric.values.min) { %>
                  <td class="<%= checkFailed(metric, 'min') %>"><%= metric.values.min.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>   
                              
                <% if(metric.values['p(90)']) { %>
                  <td class="<%= checkFailed(metric, 'p(90)') %>"><%= metric.values['p(90)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values['p(95)']) { %>
                  <td class="<%= checkFailed(metric, 'p(95)') %>"><%= metric.values['p(95)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>

                <% if(metric.values['p(99)']) { %>
                  <td class="<%= checkFailed(metric, 'p(99)') %>"><%= metric.values['p(99)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>

                <% if(metric.values['p(99.99)']) { %>
                  <td class="<%= checkFailed(metric, 'p(99.99)') %>"><%= metric.values['p(99.99)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>
              </tr>
            <% } %>
          </tbody>
        </table>
        <br>

        <% 
          first = true 
          var sortedMetrics = {}
          Object.keys(data.metrics).sort().forEach(function(k) {
            sortedMetrics[k] = data.metrics[k]
          });
          for(metricName in sortedMetrics) {
            if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName)) { continue }
            var metric = sortedMetrics[metricName] 
        %>
          <% if(first) { first = false %> <h2>Custom Metrics</h2> 
          <table class="pure-table pure-table-striped">
            <tbody>
              <thead>
                <tr>
                  <th></th>
                  <th>Avg</th>
                  <th>Max</th>
                  <th>Med</th> 
                  <th>Min</th>
                  <th>90%</th>
                  <th>95%</th>
                  <th>99%</th>
                  <th>99.99%</th>
                </tr>
              </thead>
              <% } %>
              <tr>
                <td><b><%= metricName %></b></td>
                
                <% if(metric.values.avg) { %>
                  <td class="<%= checkFailed(metric, 'avg') %>"><%= metric.values.avg.toFixed(2) %></td>
                <% } else if(metric.values.count || metric.values.count === 0) { %>
                  <td class="<%= checkFailed(metric, 'count') %>"><%= metric.values.count %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.max) { %>
                  <td class="<%= checkFailed(metric, 'max') %>"><%= metric.values.max.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  

                <% if(metric.values.med) { %>
                  <td class="<%= checkFailed(metric, 'med') %>"><%= metric.values.med.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  
                
                <% if(metric.values.min) { %>
                  <td class="<%= checkFailed(metric, 'min') %>"><%= metric.values.min.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>   
                              
                <% if(metric.values['p(90)']) { %>
                  <td class="<%= checkFailed(metric, 'p(90)') %>"><%= metric.values['p(90)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values['p(95)']) { %>
                  <td class="<%= checkFailed(metric, 'p(95)') %>"><%= metric.values['p(95)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>

                <% if(metric.values['p(99)']) { %>
                  <td class="<%= checkFailed(metric, 'p(99)') %>"><%= metric.values['p(99)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>

                <% if(metric.values['p(99.99)']) { %>
                  <td class="<%= checkFailed(metric, 'p(99.99)') %>"><%= metric.values['p(99.99)'].toFixed(2) %></td>
                <% } else if(metric.values.rate || metric.values.rate === 0) { %>
                  <td class="<%= checkFailed(metric, 'rate') %>"><%= metric.values.rate.toFixed(6) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>
              </tr>
              <% } %>
            </tbody>
          </table>
          <br>

      </div> 
      <!-- ---- end tab ---- -->

      <input type="radio" name="tabs" id="tabtwo">
      <label for="tabtwo"><i class="fas fa-chart-line"></i> &nbsp; Other Stats</label>
      <div class="tab">
        <div class="row">
          <% if (data.metrics.checks) { %>
            <div class="box metricbox">
              <h4>Checks</h4>
              <i class="fas fa-eye icon"></i>
              <div class="row"><div>Passed</div><div><%= data.metrics.checks.values.passes %></div></div>
              <div class="row"><div>Failed</div><div><%= data.metrics.checks.values.fails %></div></div>
            </div>
          <% } %>

          <div class="box metricbox">
            <h4>Iterations</h4>
            <i class="fas fa-redo icon"></i>
            <div class="row"><div>Total</div><div><%= data.metrics.iterations.values.count %></div></div>
            <div class="row"><div>Rate</div><div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div></div>
          </div>

          <div class="box metricbox">
            <h4>Virtual Users</h4>
            <i class="fas fa-user icon"></i>
            <div class="row"><div>Min</div><div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div></div>
            <div class="row"><div>Max</div><div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div></div>
          </div>
        </div>

        <div class="row">
          <div class="box metricbox">
            <h4>Requests</h4>
            <i class="fas fa-globe icon"></i>
            <div class="row"><div>Total</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div></div>
            <div class="row"><div>Rate</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div></div>
          </div>

          <div class="box metricbox">
            <h4>Data Received</h4>
            <i class="fas fa-cloud-download-alt icon"></i>
            <div class="row"><div>Total</div><div><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div></div>
            <div class="row"><div>Rate</div><div><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div></div>
          </div>

          <div class="box metricbox">
            <h4>Data Sent</h4>
            <i class="fas fa-cloud-upload-alt icon"></i>
            <div class="row"><div>Total</div><div><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div></div>
            <div class="row"><div>Rate</div><div><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div></div>
          </div>   
        </div>
      </div>  
      <!-- ---- end tab ---- -->     

      <input type="radio" name="tabs" id="tabthree">
      <label for="tabthree"><i class="fas fa-tasks"></i> Checks & Groups</label>
      <div class="tab">

        <% for(group of data.root_group.groups) { %>
          <h2>&bull; Group - <%= group.name %></h2>
          <table class="pure-table pure-table-horizontal" style="width: 100%">
            <thead>
              <tr>
                <th>Check Name</th>
                <th>Passes</th>
                <th>Failures</th>
              </tr>
            </thead>
            <% for(check of group.checks) { %>
              <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
                <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>
              </tr>
            <% } %>
          </table>
          <br>
        <% } %>

        <h2>&bull; Other Checks</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Check Name</th>
              <th>Passes</th>
              <th>Failures</th>
            </tr>
          </thead>
          <% for(check of data.root_group.checks) { %>
            <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
              <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>
            </tr>
          <% } %>
        </table>     
      </div> 
      <!-- ---- end tab ---- -->
    </div>
    <footer>K6 Reporter v<%= version %> - Ben Coleman 2021, <a href="https://github.com/benc-uk/k6-reporter">[GitHub]</a></footer>
  </body>
</html>
